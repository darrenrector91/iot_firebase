// Get a reference to the database service
    var database = firebase.database();
    var dataRef = database.ref('measurements');

    return firebase.database().ref('measurements').once('value').then(function (snapshot) {
        var username = (snapshot.val());
        console.log(username);

    });



    sensorData = [];

    // Get a reference to the database service
    var database = firebase.database();
    var dataRef = database.ref('timestamped_measurements');

    // Attach an asynchronous callback to read the data
    dataRef.on("value", function (snapshot) {
        let data = snapshot.val();
        console.log(data);
        sensorData.push(data);
    }, function (errorObject) {
        console.log("The read failed: " + errorObject.code);
    });

    console.log(sensorData);

    var length = sensorData.length;
    console.log(length);


colors: ['rgb(221, 8, 8)', 'rgb(221, 76, 8)', 'rgb(34, 175, 21)', 'rgb(172, 202, 249)', 'rgb(23, 111, 198)', 'rgb(19, 48, 163)', '']

body {
    background-color: rgb(233, 233, 233) !important;
    margin: 40px;
}

.container {
    display: grid;
    grid-template-columns: 600px 600px;  
    grid-gap: 10px;
}

.banner {
    height: 120px;
    margin-bottom: 20px;
    border-bottom: 2px solid grey;
}

.titleText {
    text-align: center;
    font-size: 40px;
    font-family: 'Share Tech Mono', monospace;

}

.sensorChart {
    width: 600px;
    margin-top: 40px;
    box-shadow: 4px 5px 13px darkgrey;
    border: 1px solid lightgrey;
}


$(document).ready(function() {
  const elementCount = 10;

  let timestamps = [];
  let soilMoistureValues = [];
  let tempValues = [];
  firebase
    .database()
    .ref("soil_moisture_ts")
    .limitToLast(elementCount)
    .on("value", ts_measures => {
      console.log("soilMoistureValues ", soilMoistureValues);

      ts_measures.forEach(ts_measure => {
        timestamps.push(
          moment(ts_measure.val().timestamp).format("YYYY-MM-DD HH:mm")
        );
        soilMoistureValues.push(ts_measure.val().value);
      });
    });
  firebase
    .database()
    .ref("temperature_ts")
    .limitToLast(elementCount)
    .on("value", ts_measures => {
      console.log("tempValues ", tempValues);

      ts_measures.forEach(ts_measure => {
        tempValues.push(ts_measure.val().value);
      });
    });

  let tempLine = {
    x: timestamps,
    y: tempValues,
    mode: "lines+markers+text",
    type: "scatter",
    name: "Temp",
    marker: { size: 12 }
  };

  var soilLine = {
    x: timestamps,
    y: soilMoistureValues,
    mode: "lines+markers+text",
    type: "scatter",
    name: "Soil Moisture",
    marker: { size: 12 }
  };

  let data = [tempLine];

  var layout = {
    // xaxis: {
    //   range: [0.75, 5.25]
    // },
    // yaxis: {
    //   range: [0, 200]
    // },
    legend: {
      y: 0.5,
      yref: "paper",
      font: {
        family: "Arial, sans-serif",
        size: 20,
        color: "black"
      }
    },
    title: "Sensor data combined",
    margin: {
      r: 50,
      pad: 0
    }
  };
  Plotly.newPlot("comboChart", data, layout);
});






